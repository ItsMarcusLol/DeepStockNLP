[{"C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\index.js":"1","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\App.js":"2","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\reportWebVitals.js":"3","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\MaterialTable.js":"4","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\Header2.js":"5","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\Chat.js":"6","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\FetchStockPrices.js":"7","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\Search.js":"8","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\ChatList.js":"9","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\pages\\About.js":"10","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\RadioB.js":"11","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\DayPriceGraph.js":"12","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\pages\\SignUp.js":"13","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\pages\\Login.js":"14","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\HistoricalTable.js":"15","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\PredictionsTable.js":"16","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\HeadlineTable.js":"17","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\LoadingSymbol.js":"18","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\Title.js":"19","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\HistoricalGraph.js":"20","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\SearchTable.js":"21"},{"size":279,"mtime":1613966085001,"results":"22","hashOfConfig":"23"},{"size":3161,"mtime":1616966747097,"results":"24","hashOfConfig":"23"},{"size":375,"mtime":1613966085001,"results":"25","hashOfConfig":"23"},{"size":6541,"mtime":1616123460559,"results":"26","hashOfConfig":"23"},{"size":9455,"mtime":1616970954754,"results":"27","hashOfConfig":"23"},{"size":5699,"mtime":1616196831024,"results":"28","hashOfConfig":"23"},{"size":4795,"mtime":1616966747098,"results":"29","hashOfConfig":"23"},{"size":3119,"mtime":1616968414580,"results":"30","hashOfConfig":"23"},{"size":3425,"mtime":1614897791185,"results":"31","hashOfConfig":"23"},{"size":6417,"mtime":1616969943171,"results":"32","hashOfConfig":"23"},{"size":3371,"mtime":1616969503399,"results":"33","hashOfConfig":"23"},{"size":3196,"mtime":1616969289071,"results":"34","hashOfConfig":"23"},{"size":5348,"mtime":1616969904345,"results":"35","hashOfConfig":"23"},{"size":5620,"mtime":1616969927283,"results":"36","hashOfConfig":"23"},{"size":3821,"mtime":1616123098972,"results":"37","hashOfConfig":"23"},{"size":4526,"mtime":1616125418317,"results":"38","hashOfConfig":"23"},{"size":4486,"mtime":1616970127447,"results":"39","hashOfConfig":"23"},{"size":537,"mtime":1613966085001,"results":"40","hashOfConfig":"23"},{"size":357,"mtime":1616124300569,"results":"41","hashOfConfig":"23"},{"size":2476,"mtime":1616123644802,"results":"42","hashOfConfig":"23"},{"size":2061,"mtime":1614310329456,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"121dhae",{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"46"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"46"},"C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\index.js",[],["98","99"],"C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\App.js",["100","101","102","103"],"import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport Header from './components/layout/Header2';\r\nimport About from './components/pages/About';\r\nimport Login from './components/pages/Login';\r\nimport SignUp from './components/pages/SignUp';\r\nimport FetchStockPrices from './components/layout/FetchStockPrices';\r\nimport MaterialTable from './components/layout/MaterialTable';\r\nimport DayPriceGraph from './components/layout/DayPriceGraph';\r\n// import HTable from './components/layout/HTable';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Chat from './components/layout/Chat';\r\n// import SearchTextBox from './components/layout/SearchTextBox';\r\nimport RadioB from './components/layout/RadioB';\r\nimport Search from './components/layout/Search';\r\nimport ChatList from './components/layout/ChatList';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n    userId: '',\r\n    authenticated: false\r\n  }\r\n\r\n\r\n  login = (username, password) => {\r\n    this.setState({ username: username, password: password, userId: 123, authenticated: true });\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    return (\r\n      <div className=\"App\">\r\n      <Router >\r\n      \r\n          <div className=\"container\" >\r\n            {/* <div style={{padding: 0}}> */}\r\n            {/* <div className={useStyles.root}> */}\r\n              <Header />\r\n              <Route exact path=\"/\" render={props => (\r\n                <React.Fragment>\r\n                  <Grid container spacing={3}>\r\n                  <Grid item xs={12}>\r\n                    <FetchStockPrices />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    {/* <SearchTextBox /> */}\r\n                    <Search />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    {/* <DayPriceGraph /> */}\r\n                    <RadioB />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <MaterialTable /> \r\n                  </Grid>\r\n\r\n                  {/* <Grid item xs={6}>\r\n                      <ChatList />\r\n                   </Grid> */}\r\n\r\n                  <Grid item xs={6}>\r\n                      <Chat />\r\n                  </Grid>\r\n\r\n                </Grid>\r\n                \r\n                </React.Fragment>\r\n              )} />\r\n              <Route path=\"/about\" component={About} />\r\n              <Route path=\"/login\">\r\n                <Login login={this.login}  accounts ={[\r\n      { username: 'user123', password: 'password123', post: 'It gonna go up' },\r\n      { username: 'Wolff', password: 'Wolffman', post: 'It gonna go doen' },\r\n      { username: 'Blaha', password: 'fireplace', post: 'It gonna' },\r\n      \r\n    ]}/>\r\n              </Route>\r\n              <Route path=\"/signup\">\r\n                <SignUp login={this.login} />\r\n              </Route>\r\n              {/* </div> */}\r\n          </div>\r\n     \r\n      </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\reportWebVitals.js",[],"C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\MaterialTable.js",[],"C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\Header2.js",["104"],"C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\Chat.js",["105"],"import Select from '@material-ui/core/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ChatList from './ChatList';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Icon from '@material-ui/icons/Send';\r\nimport React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\n\r\nconst styles = (theme) => ({\r\n  fC:{\r\n    width: 1000,\r\n\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(2),\r\n    minWidth: 90,\r\n    \r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(0),\r\n  },\r\n  textF: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(0),\r\n      // marginLeft: 20,\r\n      width: '30ch',\r\n      // minwidth: '35ch'\r\n    },\r\n  },\r\n  button: {\r\n    '& > *': {\r\n      \r\n    width:225,\r\n    height: 40,\r\n    // marginLeft:10,\r\n    // marginRight:10,\r\n    margin: theme.spacing(2),\r\n    },\r\n  },\r\n});\r\n\r\n\r\nclass Chat extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isGoing: true,\r\n      numberOfGuests: 2,\r\n      stock: '',\r\n      post: false,\r\n      text : '',\r\n      // searchNodes: \"\"\r\n\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.buttonChange = this.buttonChange.bind(this);\r\n  }\r\n\r\n  buttonChange(event){\r\n    console.log(event.target.name)\r\n    console.log(this.state.stock)\r\n    console.log(this.state.text)\r\n    this.setState({\r\n        stock: '',\r\n        text: '',\r\n    });\r\n  }\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n    console.log(name)\r\n    console.log(target)\r\n    if (name == 'post'){\r\n      console.log(\"button click\")\r\n      this.setState({\r\n        stock : '',\r\n        text: '',\r\n        post: false\r\n      });\r\n    }\r\n    else{\r\n    console.log(value)\r\n    console.log(name)\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n  }\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n    \r\n    return (  \r\n      //  <div>\r\n         <Paper>\r\n    \r\n      <Grid container spacing={2} \r\n        direction=\"row\"\r\n        justify=\"space-evenly\"\r\n         alignItems=\"center\"\r\n         \r\n         >\r\n\r\n        <Grid item xs = {12}\r\n        //  container\r\n        //  direction=\"row\"\r\n        //  justify=\"center\"\r\n        //  alignItems=\"center\"\r\n        >\r\n          <div>\r\n          <ChatList/>\r\n          </div>\r\n        </Grid>\r\n        \r\n        \r\n          <Grid item xs = {12} sm = {12} md = {6}\r\n          //  container\r\n          //  direction=\"row\"\r\n          //  justify=\"center\"\r\n          //  alignItems=\"center\"\r\n          >\r\n            <div> \r\n            {/* <Paper> */}\r\n            <form className={classes.textF} noValidate autoComplete=\"off\">\r\n              <TextField id=\"outlined-basic\" \r\n              name = 'text'\r\n              value = {this.state.text}\r\n              label=\"Post your prediction\"  \r\n              multiline rows = {5} \r\n              variant=\"outlined\"\r\n              onChange = {this.handleInputChange}\r\n              />\r\n            </form>\r\n            \r\n            {/* </Paper> */}\r\n            </div>\r\n          </Grid>\r\n        \r\n\r\n        \r\n          <Grid item xs = {6} sm = {6} md = {3}\r\n        //  container\r\n        //  direction=\"row\"\r\n        //  justify=\"center\"\r\n        //  alignItems=\"center\"\r\n        >\r\n           <div>\r\n           {/* <Paper>  */}\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">Stock</InputLabel>\r\n              <Select\r\n                name=\"stock\"\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={this.state.stock}\r\n                onChange={this.handleInputChange}\r\n                label=\"Age\"\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>None</em>\r\n                </MenuItem>\r\n                <MenuItem value={'GOOGL'}>Google </MenuItem>\r\n                <MenuItem value={'AMZN'}>Amazon</MenuItem>\r\n                <MenuItem value={'F'}>Ford</MenuItem>\r\n                <MenuItem value={'WMT'}>Walmart</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            {/* </Paper>  */}\r\n            </div>\r\n          </Grid>\r\n          \r\n\r\n        {/* <div> */}\r\n          <Grid item xs = {6} sm = {6} md = {2}\r\n          // container\r\n          // direction=\"row\"\r\n          // justify=\"center\"\r\n          // alignItems=\"center\"\r\n\r\n          //value = {this.state.post}\r\n         >\r\n            {/* <form className={classes.button} noValidate autoComplete=\"off\"> */}\r\n            <div>\r\n            {/* <Paper>  */}\r\n              <Button\r\n              name = \"post\"\r\n              type = \"submit\"\r\n              // value = {this.state.post}\r\n              classes = {classes.button}\r\n               onClick= {\r\n                 this.buttonChange\r\n              \r\n                }\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                endIcon={<Icon>send</Icon>}\r\n                >\r\n                Post\r\n              </Button>\r\n              \r\n              {/* </Paper>  */}\r\n              </div>\r\n          {/* </form> */}\r\n          </Grid> \r\n          {/* </div> */}\r\n        </Grid>\r\n        </Paper>\r\n \r\n        // </div>\r\n    );\r\n   \r\n  }\r\n}\r\n\r\nexport default withStyles(styles, )(Chat);","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\FetchStockPrices.js",["106"],"// // import React from \"react\";\r\n// // import PropTypes from 'prop-types';\r\n// // import clsx from 'clsx';\r\n// // import { withStyles } from '@material-ui/core/styles';\r\n// // import TableCell from '@material-ui/core/TableCell';\r\n// // import Paper from '@material-ui/core/Paper';\r\n// // import { AutoSizer, Column, Table } from 'react-virtualized';\r\n\r\n// import React from 'react'\r\n// import Ticker from 'react-ticker'\r\n// // import PageVisibility from 'react-page-visibility'\r\n\r\n// // import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import LinearProgress from '@material-ui/core/LinearProgress';\r\n// import CircularProgress from '@material-ui/core/CircularProgress';\r\n// import { withStyles } from '@material-ui/core/styles';\r\n\r\n// import LoadingSymbol from './LoadingSymbol';\r\n  \r\n// const styles = ((theme) => ({\r\n//             root: {\r\n                \r\n//               width: '100%',\r\n//               '& > * + *': {\r\n//                 marginTop: theme.spacing(20),\r\n//               },\r\n//             },\r\n//           }));\r\n\r\n\r\n//     class FetchStockPrices extends React.Component {\r\n        \r\n//         state = {\r\n//             loading: true, \r\n//             prices: null\r\n//         };\r\n    \r\n        \r\n//         async componentDidMount() {\r\n            \r\n\r\n//             const url = \"https://financialmodelingprep.com/api/v3/quotes/nyse?apikey=f0448bd30a7028e245052fcf3caa0837\";\r\n//             const response = await fetch(url);\r\n//             const data = await response.json();\r\n            \r\n            \r\n//             this.setState({ prices: data, loading: false});\r\n//             // this.setState({ prices: null, loading: false});\r\n\r\n//         }\r\n\r\n\r\n//         constructor(props){\r\n//             super(props)\r\n//             this.state={\r\n//                 fontSize:35\r\n//             }\r\n//          }\r\n//          changeSize(event){\r\n//           this.setState({\r\n//               fontSize:event.target.value\r\n//           });\r\n//         }\r\n\r\n            \r\n        \r\n\r\n        \r\n    \r\n//         render() {\r\n//             const {classes} = this.props;\r\n            \r\n//             if (this.state.loading){\r\n//                 // return <div>loading...</div>\r\n//                 return <LoadingSymbol />\r\n//             //    return <div >\r\n//             //      <LinearProgress />\r\n//             //      <LinearProgress color=\"secondary\" />\r\n//             //     </div>\r\n                \r\n//             }\r\n    \r\n//             if (!this.state.prices){\r\n//                 return <div style={{fontSize:\"35px\"}}>Can't get prices, right now. Check in later!</div>\r\n                  \r\n//             }\r\n            \r\n//             return (\r\n//                <Ticker className={classes.root}>\r\n//                {({ index }) => (\r\n//                    <>\r\n//                        {/* <h1>This is the Headline of element #{index}!</h1> */}\r\n//                        {/* <h1><h1> {this.state.prices[index].symbol}:{this.state.prices[index].price }, </h1></h1> */}\r\n\r\n//                        {/* What if we make the prices alternate color (green/red) as to reflect the market */}\r\n//                          <h2 className=\"tryout\" style={{fontSize:this.state.fontSize+'px', color:\"green\", color:\"red\"}}> \r\n//                             {this.state.prices[index].symbol}:{this.state.prices[index].price}<span> &nbsp; </span>\r\n//                          </h2>\r\n//                          {/* <input value={this.state.fontSize} onChange={this.changeSize.bind(this)} /> */}\r\n                      \r\n//                        <img src=\"www.my-image-source.com/\" alt=\"\"/>\r\n//                    </>\r\n//                )}\r\n//             </Ticker>\r\n           \r\n//             );\r\n//                }\r\n               \r\n    \r\n// }\r\n\r\n// export default withStyles(styles, )(FetchStockPrices);\r\n\r\nimport React, { useState } from 'react'\r\nimport Ticker from 'react-ticker'\r\nimport PageVisibility from 'react-page-visibility'\r\nimport { AppBar } from '@material-ui/core'\r\n// import AppBar from '@material-ui/core/AppBar';\r\n \r\nconst MoveStuffAround = () => {\r\n  const [pageIsVisible, setPageIsVisible] = useState(true)\r\n \r\n  const handleVisibilityChange = (isVisible) => {\r\n    setPageIsVisible(isVisible)\r\n  }\r\n \r\n  return (\r\n      <div>\r\n    <PageVisibility onChange={handleVisibilityChange}>\r\n      {pageIsVisible && (\r\n        \r\n        <Ticker>\r\n          {({ index }) => (\r\n              <>\r\n                  <h1 style={{fontSize:\"35px\", color:\"green\"}}>This is the Headline of element #{index}!</h1>\r\n                  <img src=\"www.my-image-source.com/\" alt=\"\"/>\r\n              </>\r\n          )}\r\n        </Ticker>\r\n      \r\n      )}\r\n    </PageVisibility>\r\n    </div>\r\n  )\r\n}\r\n \r\nexport default MoveStuffAround","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\Search.js",["107"],"import Icon from '@material-ui/icons/Send';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchTable from './SearchTable';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 800,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\n\r\n export default function Search() {\r\n   \r\n  \r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [text, setText] = React.useState(\"\");\r\n  {console.log(title)}\r\n    \r\n  \r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  \r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <h2 id=\"simple-modal-title\">{title}</h2>\r\n      <p id=\"simple-modal-description\">\r\n         <SearchTable symb = {title}/>\r\n      </p>\r\n    </div>\r\n  );\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <Grid container spacing={1}>\r\n          <Grid item xs={9}\r\n           container\r\n           direction=\"row\"\r\n           justify=\"center\"\r\n           alignItems=\"center\"\r\n           >\r\n      <TextField\r\n          onChange={(e) => {\r\n            setTitle(e.target.value) \r\n            setText(e.target.value)}}\r\n          id=\"standard-search\"\r\n          label=\"Search\"\r\n          style={{ margin: 4 }}\r\n          placeholder=\"Search\"\r\n          // helperText=\"Stock Search\"\r\n          fullWidth=\"true\"\r\n          margin=\"normal\"\r\n          type=\"search\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          variant=\"outlined\"\r\n          value = {text}\r\n        />\r\n        </Grid>\r\n       <Grid xs = {2} sm = {3}\r\n       container\r\n       direction=\"row\"\r\n       justify=\"center\"\r\n       alignItems=\"center\">\r\n      <Button type=\"button\" \r\n      onClick={() => {\r\n        handleOpen() \r\n        setText(\"\")\r\n      }}\r\n      variant=\"contained\"\r\n                color=\"primary\"\r\n      //         //   className={classes.button}\r\n                endIcon={<Icon>send</Icon>}\r\n      >\r\n        Search\r\n      </Button>\r\n      </Grid>\r\n      </Grid>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n   \r\n    </div>\r\n  );\r\n}\r\n\r\n","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\ChatList.js",["108"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { shadows } from '@material-ui/system';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 800,\r\n    backgroundColor: theme.palette.background.paper,\r\n    position: 'relative',\r\n    overflow: 'auto',\r\n    maxHeight: 500,\r\n    \r\n  },\r\n  listSection: {\r\n    backgroundColor: 'inherit',\r\n    fontSize: 60,\r\n    \r\n  },\r\n  listSubH: {\r\n    backgroundColor: 'inherit',\r\n    \r\n  },\r\n  ul: {\r\n    backgroundColor: 'inherit',\r\n    padding: 0,\r\n    \r\n  },\r\n  listSubHeaderRoot: {\r\n    backgroundColor: 'lightgray',\r\n    color: '#252525',\r\n    fontSize: 18,\r\n    fontFamily: 'Arial'\r\n        /* To change the font, use the fontFamily rule */\r\n  }\r\n}));\r\n\r\n\r\nlet acctPts = new Map()\r\nacctPts.set('Jessie123', {stock: \"Google\", post:[ \"I think Google stock will go up\", \"Def will go up\", \"High key will go up\"]})\r\nacctPts.set('Hilary321', {stock: \"Google\", post: [\"I think Google stock will go down\", \"I love Google stock\"]})\r\nacctPts.set('GGG', {stock: \"Google\", post: [\"I think Google stock will go up\", \" I make so much mmoney\"]})\r\nacctPts.set('AAA', {stock: \"Google\", post: [\"I think Google stock will go down\"]})\r\nacctPts.set('Gund', {stock: \"Google\", post: [\"I think Google stock will go up\"]})\r\nacctPts.set('jodml', {stock: \"Google\", post:[ \"I think Google stock will go down\"]})\r\nacctPts.set('pearbear', {stock: \"Google\", post: [\"I think Google stock will go up\"]})\r\nacctPts.set('jimfod', {stock: \"Google\", post: [\"I think Google stock will go down\"]})\r\n// acctPts..get('Jessie') // {phone: \"213-555-1234\", address: \"123 N 1st Ave\"}\r\n// acctPts..delete('Raymond') // false\r\n\r\nconsole.log(acctPts.get(\"Jessie123\"))\r\nconsole.log(acctPts.get(\"Jessie123\").post)\r\n\r\nexport default function PinnedSubheaderList() {\r\n  const classes = useStyles();\r\n\r\n//   const keys = acctPts.keys();\r\n  let keys = Array.from( acctPts.keys() );\r\n\r\n  const a = [1,2,4];\r\n\r\n  console.log(a)\r\n\r\n  console.log(acctPts.keys())\r\n\r\n  return (\r\n    <List className={classes.root} subheader={<li />}>\r\n\r\n      {/* {[0, 1, 2, 3, 4].map((sectionId) => ( */}\r\n         {keys.map((sectionId) => (\r\n        <li key={`section-${sectionId}`} className={classes.listSection}>\r\n          <ul className={classes.ul}>\r\n            <ListSubheader classes={{root:classes.listSubHeaderRoot}}>{` ${sectionId}`}</ListSubheader >\r\n\r\n            {/* {keys.map((item) => ( */}\r\n\r\n\r\n              {(acctPts.get(sectionId).post).map((p) => (\r\n                 \r\n                <ListItem key={`item-${sectionId}-`}>\r\n                <ListItemText primary={` ${acctPts.get(sectionId).stock}: ${p}`} />\r\n              \r\n                \r\n              </ListItem> \r\n\r\n             )\r\n             \r\n             )\r\n             \r\n             }\r\n             <Divider />\r\n\r\n              \r\n\r\n\r\n              {/* <ListItem key={`item-${sectionId}-`}>\r\n                <ListItemText primary={` ${acctPts.get(sectionId).stock}: ${acctPts.get(sectionId).post}`} />\r\n              </ListItem> */}\r\n\r\n            {/* ))} */}\r\n          </ul>\r\n        </li>\r\n      ))}\r\n\r\n    </List>\r\n  );\r\n}","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\pages\\About.js",["109"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction About() {\r\n    return (\r\n            <Grid container spacing = {2}\r\n            direction=\"row\"\r\n            justify=\"space-evenly\"\r\n            alignItems=\"center\">\r\n\r\n            <Grid item = {12} sm={12} md={6}>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n            <h2 style={headerStyle}>\r\n                About\r\n            </h2>\r\n            <p style={paragraphStyle}>\r\n                DeepStockNLP is a capstone project that was created by four seniors from Pacific Lutheran University with the help of a faculty advisor. \r\n                We use natural language processing techniques to try to make as accurate predictions as we can on the 9 stocks we\r\n                chose. We are doing this by using headlines from the New York Times as well as tweets from Twitter \r\n                to train our model to make the predictions better and more accurate. We are also getting headlines\r\n                from Twitter that are more business or financially driven headlines. The model we decided to use for\r\n                this project was XG Boost with Sentiment Analysis (which will be credited to the rightful owners and explained below). Right now we are testing our model with archived \r\n                news headlines from New York Times and prices we got from Yahoo Finance. Our current accuracy results\r\n                for predictions were around a 63%. We haven't added in the tweets we got from Twitter yet. In the future \r\n                we are working towards adding the tweets to our model to try to get a more accurate result.\r\n                <br/> \r\n                <br/>\r\n                Our website was designed using React and on our website we plan to have many features that we think will prove useful to our users. We will work hard \r\n                to implement as many features as we can in the time that we have to work on this project to try to make it the best it can be. Some features will only be \r\n                accessible to users with an account. To get started please  \r\n                <Link to=\"/signup\" style={{color: 'blue'}}>\r\n                  {\" create an account \"}\r\n                </Link>\r\n                or \r\n                <Link to=\"/login\" style={{color: 'blue'}}>\r\n                    {\" login \"}\r\n                </Link>\r\n                to access more features.\r\n            </p>\r\n            </Grid>\r\n\r\n            <Grid item = {12} sm={12} md={6}>\r\n            </Grid>\r\n\r\n            <Grid item = {12} sm={12}>\r\n                <h2 style={headerStyle2}>\r\n                    Tools Used In Our Model:\r\n                </h2>\r\n            </Grid>\r\n\r\n            <Grid item xs ={6}>\r\n            <h2 style={headerStyle}>\r\n                XG Boost\r\n            </h2>\r\n            <p style={paragraphStyle}>\r\n                <a href=\"https://xgboost.readthedocs.io/en/latest/\" style={{color:'blue', fontStyle:\"italic\"}}>XG Boost</a> is an open-source software that uses a gradient boosting library that's meant to be highly efficient, flexible, and portable.\r\n                It implements machine learning algorithms from the Gradient Boosting framework and provides a parallel tree \r\n                boosting that can solve many data science problems in a fast and accurate way. \r\n            </p>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n            <h1 style={headerStyle}>\r\n                Sentiment Analysis\r\n            </h1>\r\n            <p style={paragraphStyle}>\r\n                <a href=\"https://monkeylearn.com/sentiment-analysis/\" style={{color:'blue', fontStyle:\"italic\"}}>Sentiment Analysis</a> is also known as opinion mining and is a natural language processing technique that's used\r\n                to determine if the data that's inputed is positive, negative, or neutral. It's often used by businesses to determine\r\n                and analyze whether customer feedback was positive or negative. In our project we used sentiment analysis to see\r\n                whether or not the headline data we had were positive or negative. \r\n            </p>\r\n            </Grid>\r\n\r\n            <Grid item = {12} sm={12} md={6}>\r\n                <br/>\r\n            </Grid>\r\n\r\n            <Grid item={12}>\r\n            <h1 style={headerStyle}>\r\n                Disclaimer\r\n            </h1>\r\n            <p style={paragraphStyle}>\r\n                Our predictions are not 100% accurate and we are not responsible for the results of your portfolio and whether it improves or plummets. We try to make our predictions as accurate \r\n                as possible, but as of right now our accuracy is only at a 63% and users are free to use our predictions as they best see fit. We hold no responsibilities with how our predictions \r\n                affect the users and their choice to invest in the stocks we predict.\r\n                <br/>\r\n                <br/>\r\n                We also have no connection or affiliation with any of the company's stocks that we chose to predict. We chose those stocks at random and because they seemed like the most relevant companies during the time\r\n                of our project. We do our best to predict each stock but we have no insider trading going on with any of the companies. Our predicitons are honest and true and, although not 100% accurate, it's\r\n                as accurate as we can get it at the moment. It's not skewed or bias towards any one company.\r\n                <br/>\r\n                <br/>\r\n                We acknowledge and give all the rights to the creaters of XG Boost and Sentiment Analysis. We are very grateful we get to use\r\n                these features in our project to help us and make our project better. We own no rights to either of the tools listed above.\r\n            </p>\r\n            </Grid>\r\n\r\n            <br/>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst headerStyle = {\r\n    color: 'white',\r\n    fontFamily: '-moz-initial',\r\n    textAlign: 'center',\r\n    fontSize: '37px'\r\n}\r\n\r\nconst headerStyle2 = {\r\n    color: 'white',\r\n    fontFamily: '-moz-initial',\r\n    textAlign: 'center',\r\n    fontSize: '33px',\r\n    textDecorationLine: 'underline'\r\n}\r\n\r\nconst paragraphStyle = {\r\n    color: 'white',\r\n    fontFamily: 'inherit',\r\n    fontSize: '20px'\r\n}\r\n\r\n\r\nexport default About;","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\RadioB.js",[],"C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\DayPriceGraph.js",["110","111","112","113","114"],"import { ThemeProvider } from '@material-ui/styles';\r\nimport React, { PureComponent } from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport {\r\n  Line, LineChart, XAxis, YAxis, Label, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\r\n} from 'recharts';\r\nimport { render } from 'react-dom';\r\n\r\nconst data = [\r\n  {\r\n    name: '6:30', Low: 1125, High: 2400, Volume: 2400,\r\n  },\r\n  {\r\n    name: '7:00', Low: 1929, High: 3848, Volume: 2939,\r\n  },\r\n  {\r\n    name: '7:30', Low: 1400, High: 1398, Volume: 2210,\r\n  },\r\n  {\r\n    name: '8:00', Low: 2939, High: 3949, Volume: 2838,\r\n  },\r\n  {\r\n    name: '8:30', Low: 1342, High: 9800, Volume: 2290,\r\n  },\r\n  {\r\n    name: '9:00', Low: 2883, High: 9393, Volume: 2949,\r\n  },\r\n  {\r\n    name: '9:30', Low: 1123, High: 3908, Volume: 2000,\r\n  },\r\n  {\r\n    name: '10:00', Low: 1929, High: 3483, Volume: 3929,\r\n  },\r\n  {\r\n    name: '10:30', Low: 989, High: 4800, Volume: 2181,\r\n  },\r\n  {\r\n    name: '11:00', Low: 1929, High: 4959, Volume: 3848\r\n  },\r\n  {\r\n    name: '11:30', Low: 1005, High: 3800, Volume: 2500,\r\n  },\r\n  {\r\n    name: '12:00', Low: 848, High: 4858, Volume: 2394,\r\n  },\r\n  {\r\n    name: '12:30', Low: 1234, High: 4300, Volume: 2100,\r\n  },\r\n  {\r\n    name: '1:00', Low: 1394, High: 2939, Volume: 3949,\r\n  },\r\n];\r\n\r\nexport default class Example extends PureComponent {\r\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/xqjtetw0/';\r\n\r\n  \r\n  state = {\r\n    //loading: true, \r\n    //prices: null,\r\n    symbol:  this.props.symb,\r\n};\r\n\r\n// async componentDidMount() {\r\n  \r\n  \r\n    \r\n  \r\n//     // const key = \"f0448bd30a7028e245052fcf3caa0837\";\r\n//     const key = \"insert key\"\r\n//     const sym = this.state.symbol\r\n//     var url = \"https://financialmodelingprep.com/api/v3/historical-price-full/\"+sym+\"?timeseries=30&apikey=\" + key;\r\n//     var response = await fetch(url);\r\n//     var data = await response.json();\r\n   \r\n//     data = data['historical']\r\n\r\n//    // console.log(\"here \"+symbol);\r\n//     console.log(this.state.symbol)\r\n//     this.setState({ prices:data,  loading: false});\r\n// }\r\n\r\n  render() {\r\n    console.log(\"Day Price Graph: \" ,this.props.symb)\r\n    return (\r\n      <div> \r\n      <h1 style={{color:'white'}}> {this.props.symb}:</h1>\r\n      <LineChart\r\n        width={650}\r\n        height={300}\r\n        data={data}\r\n        margin={{\r\n          top: 5, right: 30, left: 20, bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" stroke=\"#FFF\"/>\r\n        <YAxis\r\n          stroke=\"#FFF\">\r\n            <Label\r\n                angle={270}\r\n                position=\"left\"\r\n                sylte={{ textAnchor: 'middle'}} \r\n                stroke=\"#FFFFFF\"\r\n                fontSize=\"17\"\r\n                fontFamily=\"normal\"\r\n                >\r\n                    Prices ($)\r\n                </Label>\r\n        </YAxis>\r\n        <Tooltip />\r\n        {/* <Legend /> */}\r\n        <Line type=\"monotone\" dataKey=\"Volume\" stroke=\"#82ca9d\" activeDot={{ r: 8 }} />\r\n        {/* <Line type=\"monotone\" dataKey=\"Low\" stroke=\"red\" />\r\n        <Line type=\"monotone\" dataKey=\"Volume\" stroke=\"#8884d8\" /> */}\r\n      </LineChart>\r\n      </div> \r\n    );\r\n  }\r\n}\r\n\r\n","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\pages\\SignUp.js",[],"C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\pages\\Login.js",[],"C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\HistoricalTable.js",[],"C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\PredictionsTable.js",["115","116"],"import React from 'react';\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport LoadingSymbol from './LoadingSymbol';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst MyNewTitle = ({ text, variant }) => (\r\n    <Typography\r\n      variant={variant}\r\n      style={{\r\n        whiteSpace: \"break-spaces\",\r\n        // overflow: \"hidden\",\r\n        // textOverflow: \"ellipsis\"\r\n      }}\r\n    >\r\n      {text}\r\n    </Typography>\r\n  );\r\n\r\nexport default class PredictionsTable extends React.Component {\r\n  state = {\r\n      loading: true, \r\n      predictions: null,\r\n      symbol: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    \r\n      const symbol = this.props.symb;\r\n      console.log(symbol);\r\n      // const key = \"f0448bd30a7028e245052fcf3caa0837\";\r\n      const key = \"insert key\"\r\n    \r\n      var url = \"https://financialmodelingprep.com/api/v3/historical-price-full/\"+symbol+\"?timeseries=30&apikey=\" + key;\r\n      var response = await fetch(url);\r\n      var data = await response.json();\r\n     \r\n      data = data['historical']\r\n\r\n      console.log(\"here \"+symbol);\r\n      console.log(data)\r\n      this.setState({ prices:data, symbol:symbol, loading: false});\r\n  }\r\n  \r\n \r\n\r\n  render() {\r\n      if (this.state.loading){\r\n         return <LoadingSymbol />\r\n      }\r\n\r\n      // if (!this.state.prices){\r\n      //     return <div>Can't get table, right now. Check in later!</div>\r\n      // }\r\n      \r\n\r\n      return (\r\n       \r\n        <MaterialTable\r\n        icons={{\r\n          Check: () => <Check />,\r\n          Export: () => <SaveAlt />,\r\n          SortArrow: () => <FilterListIcon />,\r\n          FirstPage: () => <FirstPage />,\r\n          LastPage: () => <LastPage />,\r\n          NextPage: () => <ChevronRight />,\r\n          PreviousPage: () => <ChevronLeft />,\r\n          Search: () => <Search />,\r\n          ThirdStateCheck: () => <Remove />,\r\n          ViewColumn: () => <ViewColumn />,\r\n          DetailPanel: () => <ChevronRight />,\r\n          ResetSearch: () => <Clear />\r\n        }}\r\n        title= {\r\n            <div \r\n              style={{\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                display: \"flex\",\r\n                fontSize: 33\r\n              }}>\r\n                  Our Predictions\r\n              </div>\r\n        }  \r\n\r\n        // title={<MyNewTitle variant=\"h4\" text=\"Predictions\" />}\r\n        // components={{\r\n        //   Toolbar: (props) => (\r\n        //     <div\r\n        //       style={{\r\n        //         alignItems: \"center\",\r\n        //         justifyContent: \"center\",\r\n        //         display: \"flex\"\r\n        //       }}\r\n        //     >\r\n        //       <MTableToolbar {...props} />\r\n        //     </div>\r\n        //   )\r\n        // }}\r\n\r\n      columns={[\r\n        { title: 'Date', field: 'date' },\r\n        { title: 'Open', field: 'open', type: 'numeric' },\r\n        { title: 'High', field: 'high', type: 'numeric' },\r\n        { title: 'Low', field: 'low', type: 'numeric' },\r\n        { title: 'Close', field: 'close', type: 'numeric' },\r\n        { title: 'Volume', field: 'volume', type: 'numeric'}\r\n        \r\n      ]}\r\n      \r\n      // data = {this.state.prices}\r\n      // fake data\r\n      data={[\r\n        { date: '3-24-2021', open: '1234', close: '2313', high: '9393', low: '102', volume: '300' },\r\n        { date: '3-23-2021', open: '1234', close: '2313', high: '5840', low: '302', volume: '300' },\r\n        { date: '3-22-2021', open: '1234', close: '2313', high: '5943', low: '583', volume: '300' },\r\n        { date: '3-21-2021', open: '1234', close: '2313', high: '8382', low: '452', volume: '300' },\r\n        { date: '3-20-2021', open: '1234', close: '2313', high: '2048', low: '852', volume: '300' },\r\n       \r\n      ]}\r\n      options={{ search: false, paging: true, pageSize: 5, exportButton: false, doubleHorizontalScroll: true, filtering: false , sorting: false}}\r\n    \r\n    />\r\n      );\r\n  }\r\n\r\n}","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\HeadlineTable.js",["117","118","119","120","121","122","123","124"],"import React from 'react';\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport LoadingSymbol from './LoadingSymbol';\r\nimport { FormatAlignCenter } from '@material-ui/icons';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst MyNewTitle = ({ text, variant }) => (\r\n    <Typography\r\n      variant={variant}\r\n    //   style={{\r\n    //     // whiteSpace: \"break-spaces\",\r\n    //     overflow: \"visible\",\r\n    //     textOverflow: \"inherit\"\r\n    //   }}\r\n    >\r\n      {text}\r\n    </Typography>\r\n  );\r\n\r\nexport default class HeadlineTable extends React.Component {\r\n  state = {\r\n      loading: true, \r\n      headlines: null,\r\n      symbol: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    \r\n      const symbol = this.props.symb;\r\n      console.log(symbol);\r\n      // const key = \"f0448bd30a7028e245052fcf3caa0837\";\r\n      const key = \"insert key\"\r\n    \r\n      var url = \"https://financialmodelingprep.com/api/v3/historical-price-full/\"+symbol+\"?timeseries=30&apikey=\" + key;\r\n      var response = await fetch(url);\r\n      var data = await response.json();\r\n     \r\n      data = data['historical']\r\n\r\n      console.log(\"here \"+symbol);\r\n      console.log(data)\r\n      this.setState({ prices:data, symbol:symbol, loading: false});\r\n  }\r\n  \r\n \r\n\r\n  render() {\r\n      if (this.state.loading){\r\n         return <LoadingSymbol />\r\n      }\r\n      return (\r\n       \r\n        <MaterialTable\r\n        icons={{\r\n          Check: () => <Check />,\r\n          Export: () => <SaveAlt />,\r\n          SortArrow: () => <FilterListIcon />,\r\n          FirstPage: () => <FirstPage />,\r\n          LastPage: () => <LastPage />,\r\n          NextPage: () => <ChevronRight />,\r\n          PreviousPage: () => <ChevronLeft />,\r\n          Search: () => <Search />,\r\n          ThirdStateCheck: () => <Remove />,\r\n          ViewColumn: () => <ViewColumn />,\r\n          DetailPanel: () => <ChevronRight />,\r\n          ResetSearch: () => <Clear />\r\n        }}\r\n      title= {\r\n          <div \r\n            style={{\r\n                fontSize: 33,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                display: \"flex\"\r\n            }}>\r\n                Headlines\r\n            </div>\r\n      }\r\n      columns={[\r\n        { title: 'Title', field: 'title' },\r\n        { title: 'Author', field: 'author'},\r\n        { title: 'Date', field: 'date'},\r\n        { title: 'Link', field: 'link' }\r\n      ]}\r\n      \r\n      // data = {this.state.prices}\r\n      // fake data\r\n      data={[\r\n        { title: 'Google is Splitting?', author: 'Jane Doe', date: '3-17-2021', link: <a href=\"http://google.com/\" target=\"_blank\" style={{color:'blue'}}>http://google.com/</a> },\r\n        { title: 'Worker says Amazon hung anti-union signs in bathroom stalls', author: 'Joseph Pisani', date: '3-17-2021', link: <a href=\"https://www.marketbeat.com/articles/worker-says-amazon-hung-anti-union-signs-in-bathroom-stalls-2021-03-17/?1\" target=\"_blank\" style={{color:'blue'}}>https://www.marketbeat.com/</a> },\r\n        { title: 'Forget Tesla, Ford Motor May be the Best Auto Play', author: 'Marketbeat Staff', date: '3-16-2021', link: <a href=\"https://www.marketbeat.com/originals/forgot-tesla-ford-motor-may-be-the-best-auto-play/\" target=\"_blank\" style={{color:'blue'}}>https://www.marketbeat.com/</a> },\r\n        { title: 'How Tesla Is Taking Over', author: 'Bob Ross', date: '3-15-2021', link: <a href=\"http://tesla.com/\" target=\"_blank\" style={{color:'blue'}}>http://tesla.com/</a>},\r\n        { title: 'Will Target Take Over Walmart?', author: 'Alice Tran', date: '3-15-2021', link: <a href=\"http://target.com/\" target=\"_blank\" style={{color:'blue'}}>http://target.com/</a> }\r\n        \r\n        \r\n      ]}\r\n      options={{ search: false, paging: true, pageSize: 5, exportButton: false, doubleHorizontalScroll: true, filtering: false , sorting: false}}\r\n    \r\n    />\r\n      );\r\n  }\r\n\r\n}","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\LoadingSymbol.js",[],"C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\Title.js",[],"C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\HistoricalGraph.js",["125","126","127","128","129","130"],"import { ThemeProvider } from '@material-ui/styles';\r\nimport React, { PureComponent } from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport {\r\n  Line, LineChart, XAxis, YAxis, Label, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\r\n} from 'recharts';\r\nimport { render } from 'react-dom';\r\nimport Title from './Title';\r\n\r\nfunction createData(time, amount) {\r\n    return { time, amount };\r\n  }\r\n  \r\n  const data = [\r\n    createData('00:00', 0),\r\n    createData('03:00', 300),\r\n    createData('06:00', 600),\r\n    createData('09:00', 800),\r\n    createData('12:00', 1500),\r\n    createData('15:00', 2000),\r\n    createData('18:00', 2400),\r\n    createData('21:00', 2400),\r\n    createData('24:00', undefined),\r\n  ];\r\n\r\nexport default class Example extends PureComponent {\r\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/xqjtetw0/';\r\n\r\n  \r\n  state = {\r\n    //loading: true, \r\n    //prices: null,\r\n    symbol:  this.props.symb,\r\n};\r\n\r\n// async componentDidMount() {\r\n  \r\n  \r\n    \r\n  \r\n//     // const key = \"f0448bd30a7028e245052fcf3caa0837\";\r\n//     const key = \"insert key\"\r\n//     const sym = this.state.symbol\r\n//     var url = \"https://financialmodelingprep.com/api/v3/historical-price-full/\"+sym+\"?timeseries=30&apikey=\" + key;\r\n//     var response = await fetch(url);\r\n//     var data = await response.json();\r\n   \r\n//     data = data['historical']\r\n\r\n//    // console.log(\"here \"+symbol);\r\n//     console.log(this.state.symbol)\r\n//     this.setState({ prices:data,  loading: false});\r\n// }\r\n\r\n  render() {\r\n    console.log(\"Day Price Graph: \" ,this.props.symb)\r\n    return (\r\n      <div> \r\n      {/* <h1>Historical Prices</h1> */}\r\n      <LineChart\r\n        width={900}\r\n        height={300}\r\n        data={data}\r\n        margin={{\r\n          top: 5, right: 30, left: 20, bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"time\" />\r\n        <YAxis>\r\n            <Label\r\n                angle={270}\r\n                position=\"left\"\r\n                sylte={{ textAnchor: 'middle'}} >\r\n                    Prices ($)\r\n                </Label>\r\n        </YAxis>\r\n        <Tooltip />\r\n        {/* <Legend /> */}\r\n        <Line type=\"monotone\" dataKey=\"amount\" stroke=\"#82ca9d\" activeDot={{ r: 8 }} />\r\n        {/* <Line type=\"monotone\" dataKey=\"Low\" stroke=\"red\" />\r\n        <Line type=\"monotone\" dataKey=\"Volume\" stroke=\"#8884d8\" /> */}\r\n      </LineChart>\r\n      </div> \r\n    );\r\n  }\r\n}\r\n\r\n","C:\\Users\\vanes\\Documents\\capstone\\DeepStockNLP\\website\\client\\src\\components\\layout\\SearchTable.js",["131","132","133"],"import React from 'react';\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport HistoricalTable from './HistoricalTable';\r\nimport LoadingSymbol from './LoadingSymbol';\r\n\r\n\r\n\r\n// export default class HTable extends React.Component {\r\nfunction HT(props) {\r\n  const symbol = props.symb\r\n \r\n  return (\r\n    <MaterialTable\r\n    icons={{\r\n    Check: () => <Check />,\r\n    Export: () => <SaveAlt />,\r\n    SortArrow: () => <FilterListIcon />,\r\n    FirstPage: () => <FirstPage />,\r\n    LastPage: () => <LastPage />,\r\n    NextPage: () => <ChevronRight />,\r\n    PreviousPage: () => <ChevronLeft />,\r\n    Search: () => <Search />,\r\n    ThirdStateCheck: () => <Remove />,\r\n    ViewColumn: () => <ViewColumn />,\r\n    DetailPanel: () => <ChevronRight />,\r\n    ResetSearch: () => <Clear />\r\n  }}\r\n      title={symbol}\r\n      columns={[\r\n        { title: 'Name', field: 'name' },\r\n        { title: 'Surname', field: 'surname' },\r\n        { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\r\n        {\r\n          title: 'Birth Place',\r\n          field: 'birthCity',\r\n          lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\r\n        },\r\n      ]}\r\n      data={[\r\n        { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\r\n        { name: 'Zerya Betül', surname: 'Baran', birthYear: 2017, birthCity: 34 },\r\n      ]}        \r\n      options={{\r\n        search: true\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default HT;",{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":10,"column":8,"nodeType":"140","messageId":"141","endLine":10,"endColumn":21},{"ruleId":"138","severity":1,"message":"142","line":12,"column":10,"nodeType":"140","messageId":"141","endLine":12,"endColumn":20},{"ruleId":"138","severity":1,"message":"143","line":13,"column":8,"nodeType":"140","messageId":"141","endLine":13,"endColumn":13},{"ruleId":"138","severity":1,"message":"144","line":19,"column":8,"nodeType":"140","messageId":"141","endLine":19,"endColumn":16},{"ruleId":"138","severity":1,"message":"145","line":5,"column":8,"nodeType":"140","messageId":"141","endLine":5,"endColumn":19},{"ruleId":"146","severity":1,"message":"147","line":82,"column":14,"nodeType":"148","messageId":"149","endLine":82,"endColumn":16},{"ruleId":"138","severity":1,"message":"150","line":118,"column":10,"nodeType":"140","messageId":"141","endLine":118,"endColumn":16},{"ruleId":"151","severity":1,"message":"152","line":46,"column":3,"nodeType":"153","messageId":"154","endLine":46,"endColumn":23},{"ruleId":"138","severity":1,"message":"155","line":8,"column":10,"nodeType":"140","messageId":"141","endLine":8,"endColumn":17},{"ruleId":"138","severity":1,"message":"143","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":13},{"ruleId":"138","severity":1,"message":"156","line":1,"column":10,"nodeType":"140","messageId":"141","endLine":1,"endColumn":23},{"ruleId":"138","severity":1,"message":"157","line":3,"column":10,"nodeType":"140","messageId":"141","endLine":3,"endColumn":18},{"ruleId":"138","severity":1,"message":"158","line":5,"column":65,"nodeType":"140","messageId":"141","endLine":5,"endColumn":71},{"ruleId":"138","severity":1,"message":"159","line":5,"column":73,"nodeType":"140","messageId":"141","endLine":5,"endColumn":92},{"ruleId":"138","severity":1,"message":"160","line":7,"column":10,"nodeType":"140","messageId":"141","endLine":7,"endColumn":16},{"ruleId":"138","severity":1,"message":"161","line":2,"column":25,"nodeType":"140","messageId":"141","endLine":2,"endColumn":38},{"ruleId":"138","severity":1,"message":"162","line":17,"column":7,"nodeType":"140","messageId":"141","endLine":17,"endColumn":17},{"ruleId":"138","severity":1,"message":"161","line":2,"column":25,"nodeType":"140","messageId":"141","endLine":2,"endColumn":38},{"ruleId":"138","severity":1,"message":"163","line":15,"column":10,"nodeType":"140","messageId":"141","endLine":15,"endColumn":27},{"ruleId":"138","severity":1,"message":"162","line":18,"column":7,"nodeType":"140","messageId":"141","endLine":18,"endColumn":17},{"ruleId":"164","severity":1,"message":"165","line":100,"column":116,"nodeType":"166","endLine":100,"endColumn":131},{"ruleId":"164","severity":1,"message":"165","line":101,"column":251,"nodeType":"166","endLine":101,"endColumn":266},{"ruleId":"164","severity":1,"message":"165","line":102,"column":223,"nodeType":"166","endLine":102,"endColumn":238},{"ruleId":"164","severity":1,"message":"165","line":103,"column":119,"nodeType":"166","endLine":103,"endColumn":134},{"ruleId":"164","severity":1,"message":"165","line":104,"column":128,"nodeType":"166","endLine":104,"endColumn":143},{"ruleId":"138","severity":1,"message":"156","line":1,"column":10,"nodeType":"140","messageId":"141","endLine":1,"endColumn":23},{"ruleId":"138","severity":1,"message":"157","line":3,"column":10,"nodeType":"140","messageId":"141","endLine":3,"endColumn":18},{"ruleId":"138","severity":1,"message":"158","line":5,"column":65,"nodeType":"140","messageId":"141","endLine":5,"endColumn":71},{"ruleId":"138","severity":1,"message":"159","line":5,"column":73,"nodeType":"140","messageId":"141","endLine":5,"endColumn":92},{"ruleId":"138","severity":1,"message":"160","line":7,"column":10,"nodeType":"140","messageId":"141","endLine":7,"endColumn":16},{"ruleId":"138","severity":1,"message":"167","line":8,"column":8,"nodeType":"140","messageId":"141","endLine":8,"endColumn":13},{"ruleId":"138","severity":1,"message":"168","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":14},{"ruleId":"138","severity":1,"message":"169","line":15,"column":8,"nodeType":"140","messageId":"141","endLine":15,"endColumn":23},{"ruleId":"138","severity":1,"message":"170","line":16,"column":8,"nodeType":"140","messageId":"141","endLine":16,"endColumn":21},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'DayPriceGraph' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","'Paper' is defined but never used.","'ChatList' is defined but never used.","'CssBaseline' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'AppBar' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'shadows' is defined but never used.","'ThemeProvider' is defined but never used.","'useTheme' is defined but never used.","'Legend' is defined but never used.","'ResponsiveContainer' is defined but never used.","'render' is defined but never used.","'MTableToolbar' is defined but never used.","'MyNewTitle' is assigned a value but never used.","'FormatAlignCenter' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Title' is defined but never used.","'AddBox' is defined but never used.","'HistoricalTable' is defined but never used.","'LoadingSymbol' is defined but never used.","no-global-assign","no-unsafe-negation"]